name: LionWeb integration tests

on: [push, workflow_dispatch]

env:
  NuGetDirectory: ${{github.workspace}}/nuget
  TS_DELTA_CLI_VERSION: 0.7.0-beta.13

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download delta.schema.json from specification repository
        run: ./download-delta.schema.json.sh
      - name: Validate delta JSON
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: 'delta.schema.json'
          file: 'delta/**/*.json'
      - name: Download serialization.schema.json from specification repository
        run: ./download-serialization.schema.json.sh
      - name: Validate serialization JSON
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: 'serialization.schema.json'
          file:
            'testchanges/**/*.json|testset/valid/**/*.json|testset/valid/**.json|testset/withLanguage/valid/**/*.json|testset/withLanguage/valid/*.json'
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x  # run with the latest stable version 2 of Deno
      - name: Log Deno version
        run: deno --version
      - name: Run clone script
        run: ./clone.sh
        env:
          LIONWEB_PAT: ${{ secrets.LIONWEB_PAT }}
      - name: Run Deno integration tests
        run: ./test.sh

      - name: Install lionweb/delta-protocol-test-cli
        run: npx --no-install -y --package=@lionweb/delta-protocol-test-cli@${{ env.TS_DELTA_CLI_VERSION }}

      - name: Test all C# projects
        run: dotnet test --configuration Release --logger trx ./src/cs/LionWeb.Integration.WebSocket.Tests/

      - name: Publish C# Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/*.trx
          large_files: "true"
          report_individual_runs: "true"
          report_suite_logs: "any"
          check_run_annotations: all tests, skipped tests
          action_fail: "true"
